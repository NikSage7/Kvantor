# ~*~ coding: utf8 ~*~

import cv2, numpy as np
from collections import deque

if __name__ == '__main__':
    cam = cv2.VideoCapture(0)
    thresh1 = 100
    thresh2 = 200
    window = deque([])
    for i in range(15):
        window.append(np.zeros((480,640,3), np.uint8))
    while (cam.isOpened):
        _, img = cam.read()
        gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
        #gray = cv2.equalizeHist(gray)

        _img = cv2.GaussianBlur(gray,  (15,15), 0)

        _, edges1 = cv2.threshold(gray, 0, 255, cv2.THRESH_OTSU+cv2.THRESH_BINARY)
        # обнаружение контуров
        edges = np.copy(edges1)
        contours, hierarchy  = cv2.findContours(edges, cv2.RETR_TREE,
                                                cv2.CHAIN_APPROX_SIMPLE)
        a = 0
        for i in contours:
            (x,y,), r = cv2.minEnclosingCircle(i)
            cv2.circle(img, (int(x),int(y)), int(r), (255,0,0),2)
            cv2.putText(img, str(a), (int(x),int(y)), cv2.FONT_HERSHEY_PLAIN,1,
                        (0,255,0))
            a = a+1
        # вывод на экран
        text = "thresh1 = %d, thresh2 = %d, contours = %d" \
               % (thresh1, thresh2, len(contours))
        cv2.putText(edges1, text, (50,50), cv2.FONT_HERSHEY_PLAIN,
                    1.2, (255,255,255), 1)
        cv2.imshow("img", img)
        cv2.imshow("canny", edges1)
        key = cv2.waitKey(10) & 0xff
        if key == 27:
            break
        elif key == ord('+'):
            thresh1 = thresh1 + 10
        elif key == ord('-'):
            thresh1 = max(0, thresh1 - 10)
        elif key == ord('*'):
            thresh2 = thresh2 + 10
        elif key == ord('/'):
            thresh2 = max(0, thresh2 - 10)